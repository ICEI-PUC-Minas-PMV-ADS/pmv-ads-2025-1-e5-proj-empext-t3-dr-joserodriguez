@{
    ViewBag.Title = "Gerenciamento de Pacientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.AntiForgeryToken()

<style>
    /* Estilos principais */
    .management-container {
        display: flex;
        gap: 20px;
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Seção do calendário */
    .calendar-section {
        flex: 1;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .calendar-nav {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .nav-btn {
        background: #f0f4f8;
        border: none;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        color: #333;
    }

    .nav-btn:hover {
        background: #e0e7ef;
        color: #000;
    }

    #current-month {
        font-size: 18px;
        font-weight: 600;
        color: #333;
    }

    .weekdays {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        text-align: center;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .weekday {
        padding: 8px;
        color: #333;
    }

    #calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 4px;
    }

    .day, .empty-day {
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        cursor: pointer;
        position: relative;
        color: #333;
    }

    .day {
        background-color: #f9f9f9;
    }

    .day:hover {
        background-color: #e9f0f7;
        color: #000;
    }

    .day.active {
        background-color: #e3f2fd;
        font-weight: bold;
        color: #000;
    }

    .day.today {
        border: 2px solid #1976d2;
        color: #1976d2;
        font-weight: bold;
    }

    .day.has-appointments::after {
        content: '';
        position: absolute;
        bottom: 5px;
        width: 6px;
        height: 6px;
        background-color: #1976d2;
        border-radius: 50%;
    }

    /* Seção de slots de tempo */
    .time-slots {
        margin-top: 20px;
        border-top: 1px solid #eee;
        padding-top: 15px;
    }

    .time-slots-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        color: #333;
    }

    .time-slots-grid {
        max-height: 300px;
        overflow-y: auto;
        background-color: #f9f9f9;
        border-radius: 4px;
        padding: 10px;
    }

    .time-slot {
        padding: 8px 12px;
        margin-bottom: 5px;
        background-color: #e3f2fd;
        border-radius: 4px;
        display: flex;
        justify-content: space-between;
        color: #333;
    }

    .time-slot:hover {
        background-color: #bbdefb;
        color: #000;
    }

    .time-slot .time-slot-actions {
        display: none;
    }

    .time-slot:hover .time-slot-actions {
        display: flex;
        gap: 5px;
    }

    .time-slot-actions button {
        border: none;
        background: transparent;
        cursor: pointer;
        color: #333;
        font-size: 14px;
    }

    .time-slot-actions button:hover {
        color: #000;
    }

    .no-timeslot {
        padding: 15px;
        text-align: center;
        color: #666;
    }

    /* Seção de gerenciamento */
    .management-section {
        flex: 1;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        color: #333;
    }

    .management-header {
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .management-header h3 {
        margin: 0;
        color: #333;
    }

    .appointment-info {
        background-color: #f9f9f9;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
    }

    .appointment-info-row {
        display: flex;
        margin-bottom: 10px;
    }

    .appointment-info-label {
        font-weight: 600;
        width: 140px;
        color: #555;
    }

    .appointment-info-value {
        flex: 1;
        color: #333;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
        color: #333;
        background-color: #fff;
    }

    .btn-group {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    .btn {
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        flex: 1;
        color: white;
    }

    .btn-save {
        background-color: #4caf50;
        color: white;
    }

    .btn-edit {
        background-color: #2196f3;
        color: white;
    }

    .btn-delete {
        background-color: #f44336;
        color: white;
    }

    .btn-cancel {
        background-color: #9e9e9e;
        color: white;
    }

    .btn-add {
        background-color: #4caf50;
        color: white;
        padding: 6px 12px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }

    .btn-add:hover {
        background-color: #45a049;
    }

    .no-patients {
        text-align: center;
        padding: 30px 0;
        color: #666;
    }

    /* Modal de reagendamento */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border-radius: 8px;
        max-width: 500px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        color: #333;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .modal-header h4 {
        margin: 0;
        color: #333;
    }

    .modal-close {
        background: transparent;
        border: none;
        font-size: 20px;
        cursor: pointer;
        color: #666;
    }

    .modal-close:hover {
        color: #000;
    }

    .reschedule-form {
        margin-top: 15px;
    }

    .reschedule-form label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
        color: #333;
    }

    .reschedule-form input, 
    .reschedule-form select {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
        color: #333;
        background-color: #fff;
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .modal-footer button {
        padding: 8px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-confirm {
        background-color: #4caf50;
        color: white;
    }

    .btn-cancel-modal {
        background-color: #f5f5f5;
        color: #333;
    }

    /* Estilos para novo agendamento */
    .new-appointment-form {
        margin-top: 15px;
    }

    .new-appointment-form label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
        color: #333;
    }

    .new-appointment-form input,
    .new-appointment-form select,
    .new-appointment-form textarea {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
        color: #333;
        background-color: #fff;
    }

    /* Estilo para mensagem de erro */
    .error-message {
        color: #f44336;
        font-size: 14px;
        margin-top: 5px;
        display: none;
    }

    /* Garantir que os selects também tenham texto visível */
    select option {
        color: #333;
        background-color: #fff;
    }

    /* IDs específicos que podem ter texto branco */
    #selected-date-info {
        color: #333 !important;
    }

    #info-patient-name,
    #info-patient-email,
    #info-patient-phone,
    #info-patient-dob,
    #info-patient-address,
    #info-patient-procedure,
    #info-patient-complaint,
    #info-appointment-date,
    #info-appointment-time {
        color: #333 !important;
    }
</style>

<div class="management-container">
    <!-- CALENDÁRIO -->
    <div class="calendar-section">
        <div class="calendar-header">
            <div class="calendar-nav">
                <button class="nav-btn" id="prev-month">&lt;</button>
                <span id="current-month" data-month="0" data-year="2023">Mês Ano</span>
                <button class="nav-btn" id="next-month">&gt;</button>
            </div>
        </div>

        <div class="weekdays">
            <div class="weekday">Dom</div>
            <div class="weekday">Seg</div>
            <div class="weekday">Ter</div>
            <div class="weekday">Qua</div>
            <div class="weekday">Qui</div>
            <div class="weekday">Sex</div>
            <div class="weekday">Sáb</div>
        </div>

        <div id="calendar-grid">
            <!-- Os dias do calendário serão gerados aqui -->
        </div>

        <div class="time-slots">
            <div class="time-slots-header">
                <strong>Horários Agendados:</strong>
                <div id="selected-date-info">Selecione uma data</div>
                <button id="new-appointment-btn" class="btn btn-add" style="display:none;">Novo Agendamento</button>
            </div>
            <div class="time-slots-grid" id="time-slots-grid">
                <div class="no-timeslot">Nenhum horário agendado.</div>
            </div>
        </div>
    </div>

    <!-- GERENCIAMENTO -->
    <div class="management-section">
        <div class="management-header"><h3>Informações da Consulta</h3></div>

        <div id="appointment-info" style="display:none;">
            <div class="appointment-info">
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Paciente:</div>
                    <div class="appointment-info-value" id="info-patient-name"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Email:</div>
                    <div class="appointment-info-value" id="info-patient-email"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Telefone:</div>
                    <div class="appointment-info-value" id="info-patient-phone"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Data de Nascimento:</div>
                    <div class="appointment-info-value" id="info-patient-dob"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Endereço:</div>
                    <div class="appointment-info-value" id="info-patient-address"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Procedimento:</div>
                    <div class="appointment-info-value" id="info-patient-procedure"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Descrição:</div>
                    <div class="appointment-info-value" id="info-patient-complaint"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Data da Consulta:</div>
                    <div class="appointment-info-value" id="info-appointment-date"></div>
                </div>
                <div class="appointment-info-row">
                    <div class="appointment-info-label">Horário:</div>
                    <div class="appointment-info-value" id="info-appointment-time"></div>
                </div>
            </div>

            <input type="hidden" id="current-appointment-id">

            <div class="btn-group">
                <button type="button" id="reschedule-btn" class="btn btn-edit">Reagendar</button>
                <button type="button" id="delete-btn" class="btn btn-delete">Excluir</button>
            </div>
        </div>

        <div id="no-patient-selected" class="no-patients">
            Selecione uma data e um paciente para visualizar informações
        </div>
    </div>
</div>

<!-- Modal de Reagendamento -->
<div id="reschedule-modal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h4>Reagendar Consulta</h4>
            <button class="modal-close">&times;</button>
        </div>
        <div class="reschedule-form">
            <label for="reschedule-date">Nova Data:</label>
            <input type="date" id="reschedule-date" class="form-control">

            <label for="reschedule-time">Novo Horário:</label>
            <input type="time" id="reschedule-time" class="form-control">
        </div>
        <div class="modal-footer">
            <button class="btn-cancel-modal">Cancelar</button>
            <button class="btn-confirm">Confirmar</button>
        </div>
    </div>
</div>

<!-- Modal de Novo Agendamento -->
<div id="new-appointment-modal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h4>Novo Agendamento</h4>
            <button class="modal-close">&times;</button>
        </div>
        <div class="new-appointment-form">
            <label for="appointment-date">Data:</label>
            <input type="date" id="appointment-date" class="form-control" readonly>

            <label for="appointment-time">Horário:</label>
            <input type="time" id="appointment-time" class="form-control">

            <label for="patient-select">Paciente:</label>
            <select id="patient-select" class="form-control">
                <option value="">Selecione um paciente</option>
            </select>

            <label for="appointment-procedure">Procedimento:</label>
            <select id="appointment-procedure" class="form-control">
                <option value="">Selecione um Procedimento</option>
                @foreach (var specialty in Enum.GetValues(typeof(LoginCadastroMVC.Models.SpecialtyEnum)).Cast<LoginCadastroMVC.Models.SpecialtyEnum>())
                {
                    <option value="@specialty.ToString()">@specialty</option>
                }
            </select>

            <label for="appointment-complaint">Descrição:</label>
            <textarea id="appointment-complaint" class="form-control" placeholder="Descrição"></textarea>
        </div>
        <div class="modal-footer">
            <button class="btn-cancel-modal">Cancelar</button>
            <button class="btn-confirm-appointment">Confirmar</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let appointmentsData = [];
            let selectedPatientId = null;
            let selectedDate = null;
            let today = new Date();
            let currentDate = today.toISOString().split('T')[0];

            updateHeader(today.getMonth(), today.getFullYear());
            loadCalendar(today.getMonth(), today.getFullYear());

            // Função para carregar todos os agendamentos do mês
            function loadMonthAppointments(month, year) {
                const monthStr = (month + 1).toString().padStart(2, '0');
                const yearStr = year.toString();

                $.ajax({
                    url: '@Url.Action("GetByMonth", "Patient")',
                    data: { month: monthStr, year: yearStr },
                    success: function (data) {
                        appointmentsData = data;
                        markDaysWithAppointments();
                    },
                    error: function () {
                        console.error('Erro ao buscar agendamentos do mês');
                    }
                });
            }

            // Marcar dias que têm agendamentos
            function markDaysWithAppointments() {
                if (!appointmentsData || appointmentsData.length === 0) return;

                $('.day').each(function () {
                    const dayDate = $(this).data('date');
                    const hasAppointment = appointmentsData.some(a =>
                        a.appointmentDate.split('T')[0] === dayDate);

                    if (hasAppointment) {
                        $(this).addClass('has-appointments');
                    }
                });
            }

            // Carregar o calendário para um mês específico
            function loadCalendar(month, year) {
                const daysInMonth = new Date(year, month + 1, 0).getDate();
                const firstDay = new Date(year, month, 1).getDay();
                $('#calendar-grid').empty();

                // Adicionar dias vazios no início
                for (let i = 0; i < firstDay; i++) {
                    $('#calendar-grid').append('<div class="empty-day"></div>');
                }

                // Adicionar os dias do mês
                for (let day = 1; day <= daysInMonth; day++) {
                    const date = new Date(Date.UTC(year, month, day));
                    const dateStr = date.toISOString().split('T')[0];
                    const isToday = dateStr === currentDate;

                    const dayDiv = $(`<div class="day ${isToday ? 'today' : ''}" data-date="${dateStr}">${day}</div>`);
                    $('#calendar-grid').append(dayDiv);
                }

                // Adicionar evento de clique aos dias
                $('.day').on('click', function () {
                    $('.day').removeClass('active');
                    $(this).addClass('active');

                    selectedDate = $(this).data('date');
                    const formattedDate = formatDate(selectedDate);
                    $('#selected-date-info').text('Horários agendados para: ' + formattedDate);
                    $('#new-appointment-btn').show();
                    loadTimeSlots(selectedDate);
                });

                loadMonthAppointments(month, year);
            }

            // Formatar data para exibição
            function formatDate(dateStr) {
                const date = new Date(dateStr + 'T00:00:00');
                return date.toLocaleDateString('pt-BR');
            }

            // Carregar slots de horário para uma data específica
            function loadTimeSlots(date) {
                $.ajax({
                    url: '@Url.Action("GetByDate", "Patient")',
                    data: { date: date },
                    success: function (data) {
                        $('#time-slots-grid').empty();
                        if (data && data.length > 0) {
                            data.forEach(function (slot) {
                                const $slotDiv = $(`
                                    <div class="time-slot" data-id="${slot.id}">
                                        <span>${slot.appointmentTime} - ${slot.name}</span>
                                        <div class="time-slot-actions">
                                            <button class="edit-slot" title="Visualizar">Visualizar</button>
                                            <button class="reschedule-slot" title="Reagendar">Reagendar</button>
                                            <button class="delete-slot" title="Excluir">Excluir</button>
                                        </div>
                                    </div>
                                `);

                                $slotDiv.on('click', function (e) {
                                    if (!$(e.target).closest('button').length) {
                                        displayAppointmentInfo(slot);
                                    }
                                });

                                $slotDiv.find('.edit-slot').on('click', function (e) {
                                    e.stopPropagation();
                                    displayAppointmentInfo(slot);
                                });

                                $slotDiv.find('.reschedule-slot').on('click', function (e) {
                                    e.stopPropagation();
                                    openRescheduleModal(slot);
                                });

                                $slotDiv.find('.delete-slot').on('click', function (e) {
                                    e.stopPropagation();
                                    if (confirm('Tem certeza que deseja excluir esta consulta?')) {
                                        deleteAppointment(slot.id);
                                    }
                                });

                                $('#time-slots-grid').append($slotDiv);
                            });
                        } else {
                            $('#time-slots-grid').append('<div class="no-timeslot">Nenhum horário agendado.</div>');
                        }
                    },
                    error: function () {
                        $('#time-slots-grid').html('<div class="no-timeslot">Erro ao buscar horários.</div>');
                    }
                });
            }

            // Exibir informações da consulta
            function displayAppointmentInfo(appointment) {
                selectedPatientId = appointment.id;
                $('#current-appointment-id').val(appointment.id);

                $('#info-patient-name').text(appointment.name);
                $('#info-patient-email').text(appointment.email);
                $('#info-patient-phone').text(appointment.phone);
                $('#info-patient-dob').text(formatDate(appointment.dateOfBirth));
                $('#info-patient-address').text(appointment.address);
                $('#info-patient-procedure').text(appointment.specialtiesString || appointment.procedure);
                $('#info-patient-complaint').text(appointment.complaint);
                $('#info-appointment-date').text(formatDate(appointment.appointmentDate));
                $('#info-appointment-time').text(appointment.appointmentTime);

                $('#no-patient-selected').hide();
                $('#appointment-info').show();
            }

            // Reagendar consulta
            function openRescheduleModal(appointment) {
                selectedPatientId = appointment.id;
                const appointmentDate = appointment.appointmentDate?.split('T')[0] || '';
                $('#reschedule-date').val(appointmentDate);
                $('#reschedule-time').val(appointment.appointmentTime);
                $('#reschedule-modal').css('display', 'block');
            }

            // Fechar modais
            $('.modal-close, .btn-cancel-modal').on('click', function () {
                $('.modal').css('display', 'none');
            });

            // Confirmar reagendamento
            $('.btn-confirm').on('click', function () {
                const newDate = $('#reschedule-date').val();
                const newTime = $('#reschedule-time').val();

                if (!newDate || !newTime) {
                    alert('Por favor, selecione data e horário.');
                    return;
                }

                rescheduleAppointment(selectedPatientId, newDate, newTime);
            });

            // Função de reagendamento
            function rescheduleAppointment(patientId, newDate, newTime) {
                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("Reschedule", "Patient")',
                    type: 'POST',
                    data: {
                        id: patientId,
                        appointmentDate: newDate,
                        appointmentTime: newTime,
                        __RequestVerificationToken: token
                    },
                    success: function (result) {
                        $('#reschedule-modal').css('display', 'none');
                        const month = parseInt($('#current-month').data('month'));
                        const year = parseInt($('#current-month').data('year'));
                        loadMonthAppointments(month, year);

                        if (selectedDate) {
                            loadTimeSlots(selectedDate);
                        }

                        resetView();
                        alert('Consulta reagendada com sucesso!');
                    },
                    error: function () {
                        alert('Erro ao reagendar consulta. Tente novamente.');
                    }
                });
            }

            // Excluir consulta
            function deleteAppointment(patientId) {
                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("DeleteAjax", "Patient")',
                    type: 'POST',
                    data: {
                        id: patientId,
                        __RequestVerificationToken: token
                    },
                    success: function (result) {
                        const month = parseInt($('#current-month').data('month'));
                        const year = parseInt($('#current-month').data('year'));
                        loadMonthAppointments(month, year);

                        if (selectedDate) {
                            loadTimeSlots(selectedDate);
                        }

                        resetView();
                        alert('Consulta excluída com sucesso!');
                    },
                    error: function () {
                        alert('Erro ao excluir consulta. Tente novamente.');
                    }
                });
            }

            // Resetar visualização
            function resetView() {
                $('#appointment-info').hide();
                $('#no-patient-selected').show();
                selectedPatientId = null;
                $('#current-appointment-id').val('');
            }

            // Navegação do calendário
            $('#prev-month').on('click', function () {
                const month = parseInt($('#current-month').data('month'));
                const year = parseInt($('#current-month').data('year'));

                if (month === 0) {
                    updateHeader(11, year - 1);
                    loadCalendar(11, year - 1);
                } else {
                    updateHeader(month - 1, year);
                    loadCalendar(month - 1, year);
                }
            });

            $('#next-month').on('click', function () {
                const month = parseInt($('#current-month').data('month'));
                const year = parseInt($('#current-month').data('year'));

                if (month === 11) {
                    updateHeader(0, year + 1);
                    loadCalendar(0, year + 1);
                } else {
                    updateHeader(month + 1, year);
                    loadCalendar(month + 1, year);
                }
            });

            // Atualizar cabeçalho do calendário
            function updateHeader(month, year) {
                const months = ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho",
                    "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"];
                $('#current-month').text(months[month] + ' ' + year);
                $('#current-month').data('month', month);
                $('#current-month').data('year', year);
            }

            // Eventos dos botões
            $('#reschedule-btn').on('click', function () {
                if (selectedPatientId) {
                    $.ajax({
                        url: '@Url.Action("GetById", "Patient")',
                        type: 'GET',
                        data: { id: selectedPatientId },
                        success: function (data) {
                            openRescheduleModal(data);
                        },
                        error: function () {
                            alert('Erro ao buscar dados da consulta. Tente novamente.');
                        }
                    });
                } else {
                    alert('Selecione um paciente primeiro.');
                }
            });

            $('#delete-btn').on('click', function () {
                if (selectedPatientId) {
                    if (confirm('Tem certeza que deseja excluir esta consulta?')) {
                        deleteAppointment(selectedPatientId);
                    }
                } else {
                    alert('Selecione um paciente primeiro.');
                }
            });

            // Inicialização do modal de novo agendamento
            $('#new-appointment-btn').on('click', function () {
                $('#appointment-date').val(selectedDate);
                loadPatientsList();
                $('#new-appointment-modal').css('display', 'block');
            });

            // Função para carregar a lista de pacientes existentes
            function loadPatientsList() {
                $.ajax({
                    url: '@Url.Action("GetAllPatients", "Patient")',
                    type: 'GET',
                    success: function (data) {
                        const $select = $('#patient-select');
                        $select.find('option:not(:first)').remove();

                        if (data && data.length > 0) {
                            data.forEach(function (patient) {
                                $select.append(`<option value="${patient.id}">${patient.name}</option>`);
                            });
                        }
                    },
                    error: function () {
                        alert('Erro ao carregar lista de pacientes.');
                    }
                });
            }

            // Confirmar novo agendamento
            $('.btn-confirm-appointment').on('click', function () {
                const patientId = $('#patient-select').val();
                const date = $('#appointment-date').val();
                const time = $('#appointment-time').val();
                const procedure = $('#appointment-procedure').val();
                const complaint = $('#appointment-complaint').val();

                if (!patientId) {
                    alert('Por favor, selecione um paciente.');
                    return;
                }

                if (!date || !time) {
                    alert('Por favor, selecione data e horário.');
                    return;
                }

                checkTimeAvailability(date, time, function (isAvailable) {
                    if (isAvailable) {
                        createNewAppointment(patientId, date, time, procedure, complaint);
                    } else {
                        alert('Horário não disponível. Por favor, escolha outro horário.');
                    }
                });
            });

            // Verificar disponibilidade do horário
            function checkTimeAvailability(date, time, callback) {
                $.ajax({
                    url: '@Url.Action("CheckTimeAvailability", "Patient")',
                    type: 'GET',
                    data: { date: date, time: time },
                    success: function (result) {
                        if (typeof result === 'object' && result.hasOwnProperty('isAvailable')) {
                            callback(result.isAvailable);
                        } else {
                            callback(result);
                        }
                    },
                    error: function () {
                        alert('Erro ao verificar disponibilidade do horário.');
                        callback(false);
                    }
                });
            }

            // Criar novo agendamento
            function createNewAppointment(patientId, date, time, procedure, complaint) {
                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("CreateAppointment", "Patient")',
                    type: 'POST',
                    data: {
                        patientId: patientId,
                        appointmentDate: date,
                        appointmentTime: time,
                        procedure: procedure,
                        complaint: complaint,
                        __RequestVerificationToken: token
                    },
                    success: function (result) {
                        if (result.success) {
                            $('#new-appointment-modal').css('display', 'none');

                            $('#patient-select').val('');
                            $('#appointment-time').val('');
                            $('#appointment-procedure').val('');
                            $('#appointment-complaint').val('');

                            const month = parseInt($('#current-month').data('month'));
                            const year = parseInt($('#current-month').data('year'));
                            loadMonthAppointments(month, year);

                            if (selectedDate) {
                                loadTimeSlots(selectedDate);
                            }

                            alert('Consulta agendada com sucesso!');
                        } else {
                            alert(result.message || 'Erro ao criar agendamento. Tente novamente.');
                        }
                    },
                    error: function (jqXHR) {
                        console.error('Erro ao criar agendamento:', jqXHR);
                        alert('Erro ao criar agendamento. Tente novamente.');
                    }
                });
            }

            // Quando clica fora do modal, fecha
            $(window).on('click', function (event) {
                if ($(event.target).hasClass('modal')) {
                    $('.modal').css('display', 'none');
                }
            });

            // Inicializar com o dia atual selecionado
            const todayElement = $('.day.today');
            if (todayElement.length) {
                todayElement.click();
            }
        });
    </script>
}